import asyncio
import secrets
from django.contrib.auth.models import User
from django.contrib.sites.models import Site
from django.db.models.signals import post_save, m2m_changed
from django.dispatch import receiver
from main.models import Task, UserProfile
from .utils import send_telegram_message
import logging

logger = logging.getLogger(__name__)

def to_http(url: str) -> str:
    if url.startswith("https://"):
        return url.replace("https://", "http://", 1)
    return url

# –°–∏–≥–Ω–∞–ª –¥–ª—è —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ –∑–∞–¥–∞—á—ñ
@receiver(post_save, sender=Task)
def notify_on_task_creation(sender, instance, created, **kwargs):
    if created:  # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Ü–µ –Ω–æ–≤–∞ –∑–∞–¥–∞—á–∞
        current_site = Site.objects.get_current()
        task_url = to_http(f"https://{current_site.domain}{instance.get_absolute_url()}")  # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ to_http

        # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—Å—ñ–º –≤–∏–∫–æ–Ω–∞–≤—Ü—è–º
        for user in instance.assigned_to.all():
            if user.profile.telegram_group_id:
                message = (
                    f"üîî –ù–æ–≤–∞ –∑–∞–¥–∞—á–∞ –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–∞ –≤–∞–º:\n"
                    f"üìã –ù–æ–º–µ—Ä: {instance.task_number}\n"
                    f"üìå –ù–∞–∑–≤–∞: {instance.title}\n"
                    f"üßë‚Äçüíª –ê–≤—Ç–æ—Ä: {instance.assigned_by.username}\n"
                    f"üìÖ –î–µ–¥–ª–∞–π–Ω: {instance.deadline.strftime('%Y-%m-%d %H:%M')}\n"
                    f"üîó –î–µ—Ç–∞–ª—ñ: {task_url}"
                )
                asyncio.run(send_telegram_message(user.profile.telegram_group_id, message))


# –°–∏–≥–Ω–∞–ª –¥–ª—è —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–∏ –∑–º—ñ–Ω—ñ –≤–∏–∫–æ–Ω–∞–≤—Ü—ñ–≤
@receiver(m2m_changed, sender=Task.assigned_to.through)
def notify_assigned_users(sender, instance, action, **kwargs):
    if action == "post_add":  # –í–∏–∫–æ–Ω–∞–≤—Ü—ñ –¥–æ–¥–∞–Ω—ñ
        current_site = Site.objects.get_current()
        task_url = to_http(f"https://{current_site.domain}{instance.get_absolute_url()}")  # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ to_http

        # –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è –Ω–æ–≤–∏—Ö –≤–∏–∫–æ–Ω–∞–≤—Ü—ñ–≤
        for user in instance.assigned_to.all():
            if user.profile.telegram_group_id:
                message = (
                    f"üîî –í–∞—Å –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–æ –Ω–∞ –Ω–æ–≤—É –∑–∞–¥–∞—á—É:\n"
                    f"üìã –ù–æ–º–µ—Ä: {instance.task_number}\n"
                    f"üìå –ù–∞–∑–≤–∞: {instance.title}\n"
                    f"üßë‚Äçüíª –ê–≤—Ç–æ—Ä: {instance.assigned_by.username}\n"
                    f"üìÖ –î–µ–¥–ª–∞–π–Ω: {instance.deadline.strftime('%Y-%m-%d %H:%M')}\n"
                    f"üîó –î–µ—Ç–∞–ª—ñ: {task_url}"
                )
                asyncio.run(send_telegram_message(user.profile.telegram_group_id, message))


# –°–∏–≥–Ω–∞–ª –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
@receiver(post_save, sender=User)
def create_user_profile(sender, instance, created, **kwargs):
    if created:
        secret_key = secrets.token_hex(16)  # –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è —É–Ω—ñ–∫–∞–ª—å–Ω–æ–≥–æ —Å–µ–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞
        UserProfile.objects.create(user=instance, secret_key=secret_key)
